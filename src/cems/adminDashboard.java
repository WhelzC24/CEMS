/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cems;

import java.awt.Component;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author PC
 */
public class adminDashboard extends javax.swing.JFrame {

    /**
     * Creates new form Organizer_Dashboard_Admin
     */
    public adminDashboard() {
        initComponents();
        loadEventsToAdminTable();
        sortDefault();
        
        eventTable.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected,
                                                           boolean hasFocus, int row, int column) {
                Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                if (value != null) {
                    setToolTipText(value.toString());  // Show cell content as tooltip
                } else {
                    setToolTipText(null);
                }
                return c;
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DBlue_panel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        DBlue_panel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        eventTable = new javax.swing.JTable();
        organizer_new = new javax.swing.JButton();
        organizer_edit = new javax.swing.JButton();
        organizer_delete = new javax.swing.JButton();
        organizer_viewstudents = new javax.swing.JButton();
        logout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFocusable(false);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        DBlue_panel.setBackground(new java.awt.Color(0, 0, 51));
        DBlue_panel.setForeground(new java.awt.Color(0, 0, 0));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("BISU Campus Event Manager");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Rockwell Condensed", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Event Organizer Dashboard");

        DBlue_panel1.setBackground(new java.awt.Color(98, 98, 130));

        eventTable.setAutoCreateRowSorter(true);
        eventTable.setBackground(new java.awt.Color(0, 0, 0));
        eventTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        eventTable.setForeground(new java.awt.Color(255, 255, 255));
        eventTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "No.", "Events", "Event Type", "Location", "Start Time", "End Time", "Participants"
            }
        ));
        eventTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        eventTable.setFocusable(false);
        eventTable.setRowHeight(30);
        eventTable.setSelectionForeground(new java.awt.Color(51, 51, 51));
        jScrollPane1.setViewportView(eventTable);

        organizer_new.setBackground(new java.awt.Color(37, 55, 30));
        organizer_new.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        organizer_new.setForeground(new java.awt.Color(255, 255, 255));
        organizer_new.setText("Create new event");
        organizer_new.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        organizer_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizer_newActionPerformed(evt);
            }
        });

        organizer_edit.setBackground(new java.awt.Color(37, 55, 30));
        organizer_edit.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        organizer_edit.setForeground(new java.awt.Color(255, 255, 255));
        organizer_edit.setText("Edit event");
        organizer_edit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        organizer_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizer_editActionPerformed(evt);
            }
        });

        organizer_delete.setBackground(new java.awt.Color(51, 0, 0));
        organizer_delete.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        organizer_delete.setForeground(new java.awt.Color(255, 255, 255));
        organizer_delete.setText("Delete event");
        organizer_delete.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        organizer_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizer_deleteActionPerformed(evt);
            }
        });

        organizer_viewstudents.setBackground(new java.awt.Color(102, 51, 0));
        organizer_viewstudents.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        organizer_viewstudents.setForeground(new java.awt.Color(255, 255, 255));
        organizer_viewstudents.setText("View registered users");
        organizer_viewstudents.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        organizer_viewstudents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizer_viewstudentsActionPerformed(evt);
            }
        });

        logout.setBackground(new java.awt.Color(51, 0, 0));
        logout.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        logout.setForeground(new java.awt.Color(255, 255, 255));
        logout.setText("Log out");
        logout.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DBlue_panel1Layout = new javax.swing.GroupLayout(DBlue_panel1);
        DBlue_panel1.setLayout(DBlue_panel1Layout);
        DBlue_panel1Layout.setHorizontalGroup(
            DBlue_panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DBlue_panel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(DBlue_panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(organizer_new, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(organizer_edit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(DBlue_panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 770, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(DBlue_panel1Layout.createSequentialGroup()
                        .addComponent(organizer_viewstudents, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(organizer_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        DBlue_panel1Layout.setVerticalGroup(
            DBlue_panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DBlue_panel1Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(DBlue_panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(DBlue_panel1Layout.createSequentialGroup()
                        .addComponent(organizer_new)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(organizer_edit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(logout))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DBlue_panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(organizer_delete)
                    .addComponent(organizer_viewstudents))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout DBlue_panelLayout = new javax.swing.GroupLayout(DBlue_panel);
        DBlue_panel.setLayout(DBlue_panelLayout);
        DBlue_panelLayout.setHorizontalGroup(
            DBlue_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DBlue_panelLayout.createSequentialGroup()
                .addGroup(DBlue_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DBlue_panelLayout.createSequentialGroup()
                        .addGap(325, 325, 325)
                        .addComponent(jLabel2)
                        .addGap(0, 320, Short.MAX_VALUE))
                    .addGroup(DBlue_panelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(DBlue_panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(DBlue_panelLayout.createSequentialGroup()
                .addGap(225, 225, 225)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        DBlue_panelLayout.setVerticalGroup(
            DBlue_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DBlue_panelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(DBlue_panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(79, Short.MAX_VALUE))
        );

        getContentPane().add(DBlue_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 950, 540));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void organizer_viewstudentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizer_viewstudentsActionPerformed
        new usersDashboard().setVisible(true);
        ((JFrame) SwingUtilities.getWindowAncestor(organizer_viewstudents)).dispose();
    }//GEN-LAST:event_organizer_viewstudentsActionPerformed

    private void organizer_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizer_newActionPerformed
        createEvent event = new createEvent();
        this.setEnabled(false);

        event.setVisible(true);

        // When the new window is closed, enable the parent window again
        event.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                setEnabled(true);  // Re-enable the parent window when the new window is closed
                setVisible(true);
                loadEventsToAdminTable();
                sortDefault();
            }
        });
    }//GEN-LAST:event_organizer_newActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        new login().setVisible(true);
        ((JFrame) SwingUtilities.getWindowAncestor(logout)).dispose();
    }//GEN-LAST:event_logoutActionPerformed

    private void organizer_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizer_deleteActionPerformed
        int selectedRow = eventTable.getSelectedRow();
        if (selectedRow != -1) {
            // Get the event_no from the selected row (assuming event_no is in column 0)
            int eventNo = (int) eventTable.getValueAt(selectedRow, 0);

            int confirm = JOptionPane.showConfirmDialog(null,
                    "Are you sure you want to delete this event?",
                    "Confirm Deletion", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                boolean deleted = DBHelper.deleteEvent(eventNo);
                if (deleted) {
                    JOptionPane.showMessageDialog(null, "Event deleted successfully.");
                    loadEventsToAdminTable(); // Reload the updated table
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to delete event.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select an event to delete.");
        }
    }//GEN-LAST:event_organizer_deleteActionPerformed

    private void organizer_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizer_editActionPerformed
        int selectedRow = eventTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select an event to edit.");
            return;
        }

        try {
            // Get event details from the selected row in the table
            int eventNo = Integer.parseInt(eventTable.getValueAt(selectedRow, 0).toString());
            String title = eventTable.getValueAt(selectedRow, 1).toString();
            String type = eventTable.getValueAt(selectedRow, 2).toString();
            String location = eventTable.getValueAt(selectedRow, 3).toString();

            // Get the merged datetime strings from the table
            String dateTimeStartStr = eventTable.getValueAt(selectedRow, 4).toString(); // format: yyyy-MM-dd HH:mm:ss
            String dateTimeEndStr = eventTable.getValueAt(selectedRow, 5).toString();

            // Define the date/time format used in the table (you can adjust if needed)
            SimpleDateFormat sdf = new SimpleDateFormat("MMM dd, yyyy hh:mm a");

            // Parse the datetime strings into java.util.Date objects
            java.util.Date utilStart = sdf.parse(dateTimeStartStr);
            java.util.Date utilEnd = sdf.parse(dateTimeEndStr);

            // Convert to java.sql.Date and java.sql.Time for database compatibility
            java.sql.Date sqlDateStart = new java.sql.Date(utilStart.getTime());
            java.sql.Time sqlTimeStart = new java.sql.Time(utilStart.getTime());
            java.sql.Date sqlDateEnd = new java.sql.Date(utilEnd.getTime());
            java.sql.Time sqlTimeEnd = new java.sql.Time(utilEnd.getTime());

            // Create an EditEventData object to pass to the editEvent form
            EditEventData data = new EditEventData(eventNo, title, type, location, sqlDateStart, sqlTimeStart, sqlDateEnd, sqlTimeEnd);

            // Create and display the editEvent form, passing the data for editing
            editEvent event = new editEvent(this, data);

            // Disable the parent window while editing
            this.setEnabled(false);

            // Show the editEvent form
            event.setVisible(true);

            // Add a window listener to re-enable the parent window and refresh the event list after closing the edit form
            event.addWindowListener(new java.awt.event.WindowAdapter() {
                public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                    setEnabled(true);  // Re-enable the parent window when the new window is closed
                    setVisible(true);
                    loadEventsToAdminTable();  // Reload events to the admin table
                    sortDefault();             // Optionally, you can sort the table here as well
                }
            });

        } catch (ParseException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to parse date/time data.");
        }
    }//GEN-LAST:event_organizer_editActionPerformed

    private void loadEventsToAdminTable() {
        ResultSet rs = DBHelper.getAllEvents();
        DefaultTableModel model = (DefaultTableModel) eventTable.getModel();
        model.setRowCount(0);

        SimpleDateFormat formatter = new SimpleDateFormat("MMM dd, yyyy hh:mm a");
        
        try {
            while (rs.next()) {
                Timestamp start = rs.getTimestamp("date_start");
                Timestamp end = rs.getTimestamp("date_end");

                String formattedStart = formatter.format(start);
                String formattedEnd = formatter.format(end);
                
                Object[] row = {
                    rs.getInt("event_no"),
                    rs.getString("event_name"),
                    rs.getString("event_type"),
                    rs.getString("location"),
                    formattedStart,
                    formattedEnd,
                    rs.getString("participants")
                };
                model.addRow(row);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    private void sortDefault() {
        DefaultTableModel model = (DefaultTableModel) eventTable.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        eventTable.setRowSorter(sorter);

        // Sort by event date column (index 4)
        sorter.setSortKeys(Arrays.asList(
            new RowSorter.SortKey(0, SortOrder.ASCENDING)
        ));
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DBlue_panel;
    private javax.swing.JPanel DBlue_panel1;
    private javax.swing.JTable eventTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logout;
    private javax.swing.JButton organizer_delete;
    private javax.swing.JButton organizer_edit;
    private javax.swing.JButton organizer_new;
    private javax.swing.JButton organizer_viewstudents;
    // End of variables declaration//GEN-END:variables
}
